{"version":3,"file":"static/js/944.5b732c22.chunk.js","mappings":"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","sources":["pages/sample/Selling/SellingTable.jsx","pages/sample/Selling/index.jsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import {Button, Col, Form, Image, message, Modal, Row, Select, Space, Table} from \"antd\";\nimport PropTypes from \"prop-types\";\nimport {FaFilePdf} from \"react-icons/fa\";\nimport {AppLoader} from \"../../../@crema\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {useMutation} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {EditOutlined} from \"@ant-design/icons\";\nimport {useAuthUser} from \"../../../@crema/utility/AuthHooks\";\n\nconst initialValueForm = {\n    status: null,\n};\nconst SellingTable = ({data,refetch,setPdfId,setIsLoadingPdf}) => {\n    const {user}=useAuthUser()\n    const [form] = Form.useForm();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editId, setEditId] = useState(null)\n\n    const {\n        mutate: editStatusMutate,\n        data: editStatus,\n        isLoading: editStatusLoading,\n        isSuccess: editStatusSuccess,\n    } = useMutation(({url, data, id}) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    const CreatePDF = (id) => {\n        setPdfId(id)\n        setIsLoadingPdf(true)\n    };\n\n    // status edit\n    const EditStatus = (id) => {\n        setIsModalOpen(true)\n        setEditId(id)\n    };\n\n\n    const onFinish = (values) => {\n        editStatusMutate({url: \"/Apartment/SelerUpdate\", data: values, id: editId});\n    }\n    const handleOk = () => {\n        form\n            .validateFields()\n            .then((values) => {\n                onFinish(values);\n            })\n            .catch((errorInfo) => {\n                console.log('Failed:', errorInfo);\n            });\n    };\n\n    const handleCancel = () => {\n        setIsModalOpen(false);\n    };\n\n    useEffect(() => {\n        if (editStatusSuccess) {\n            setIsModalOpen(false)\n            form.setFieldsValue(initialValueForm)\n            refetch()\n\n        }\n    }, [editStatus]);\n\n    // option status\n    const optionsStatus = useMemo(() => {\n        const data=[\n            {\n                value: 1,\n                label: 'Доступно',\n            },\n            {\n                value: 2,\n                label: 'Занято',\n            },\n        ]\n         if (user.role[1]==='admin'){\n             data.push({\n                 value: 3,\n                 label: 'Продано',\n             })\n         }\n\n\n\n        return data\n    }, []);\n\n\n    // table columns\n    const columns = [\n        {\n            title: 'Квартира',\n            dataIndex: 'name',\n            id: 'name',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Площадь',\n            dataIndex: 'size',\n            id: 'size',\n            render: (text) => <p>{text}м²</p>,\n        },\n        {\n            title: 'Комнаты',\n            dataIndex: 'roomCount',\n            id: 'roomCount',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Стоимость',\n            dataIndex: 'price',\n            id: 'price',\n            render: (text) => <p>{text}$</p>,\n        },\n        {\n            title: 'Состояние',\n            dataIndex: 'status',\n            id: 'status',\n            render: (text,record) =>\n                (\n                    <Button\n                        onClick={() => EditStatus(record.id)}\n                        style={{backgroundColor:text === 1 ? \"green\" : text === 2 ? \"#f7ff00\" : \"#ff0000\",\n                            color:text === 1 ?\n                                \"#fff\" :\n                                text === 2 ? \"#000000\" :\n                                    \"#fff\"}}\n                        icon={<EditOutlined />\n                        }\n                    >\n                        {text === 1 ? \"Доступно\" : text === 2 ? \"Занято\" : \"Продано\"}\n                    </Button>\n                )\n\n\n        },\n        {\n            title: 'Изображение квартиры',\n            dataIndex: 'homeImage',\n            id: 'homeImage',\n            render: (image) => {\n                return (\n                    <Image\n                        width={50}\n\n                        src={`${process.env.REACT_APP_IMAGE_URL}/${image?.path}`}\n                    />\n                )\n            },\n        },\n        {\n            title: 'Изображения этаж',\n            dataIndex: 'floorImage',\n            id: 'floorImage',\n            render: (image) => {\n                return (\n                    <Image\n                        width={50}\n\n                        src={`${process.env.REACT_APP_IMAGE_URL}/${image?.path}`}\n                    />\n                )\n            },\n        },\n        {\n            title: 'PDF',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        disabled={record.status===3}\n                        onClick={() => CreatePDF(record.id)}\n                        icon={<FaFilePdf />}\n                        style={{backgroundColor:'#FF5B00'}}\n                    >\n\n                    </Button>\n\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Modal title=\"Изменить активный\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n                {(editStatusLoading) ?\n                    <AppLoader/> :\n                    <Form\n                        form={form}\n                        name=\"basic\"\n                        labelCol={{\n                            span: 24\n                        }}\n                        wrapperCol={{\n                            span: 24\n                        }}\n                        style={{\n                            maxWidth: \"100%\"\n                        }}\n                        initialValues={initialValueForm}\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                    >\n                        <Row gutter={20}>\n                            <Col span={24}>\n                                <Form.Item\n                                    label={'Изменить статус дома'}\n                                    name={'status'}\n                                    rules={[{\n                                        required: true, message: 'Вы должны выбрать состояние'\n                                    }]}\n                                    wrapperCol={{\n                                        span: 24,\n                                    }}\n                                >\n                                    <Select\n                                        style={{\n                                            width: '100%',\n                                        }}\n                                        placeholder='Изменить статус дома'\n                                        optionLabelProp='label'\n                                        options={optionsStatus}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                }\n            </Modal>\n            <Table\n                columns={columns}\n\n                dataSource={data}\n                rowKey={(record) => record.id}\n            />\n        </div>\n    );\n};\n\nSellingTable.propTypes = {\n    data: PropTypes.array,\n    refetch:PropTypes.func,\n    setPdfId:PropTypes.func,\n    setIsLoadingPdf:PropTypes.func\n}\n\nexport default SellingTable;","import React, {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, message, Row, Select, Space, Spin} from 'antd';\nimport apiService from '../../../@crema/services/apis/api';\nimport {useQuery} from 'react-query';\nimport SellingTable from \"./SellingTable\";\nimport {PiBroomFill} from \"react-icons/pi\";\nimport {pdf} from \"@react-pdf/renderer\";\nimport CreatPDF from \"./creat-PDF\";\nimport {saveAs} from 'file-saver'\n\nconst Index = () => {\n    const [form] = Form.useForm();\n    const [filterStatus, setFilterStatus] = useState(\"\")\n    const [filterId, setFilterId] = useState({\n        slotId: null,\n        houseId: null,\n        floorId: null\n    })\n    const [pdfId, setPdfId] = useState(null)\n    const [isLoadingPdf, setIsLoadingPdf] = useState(false)\n\n    // create pdf\n    const {data: pdfData, refetch: pdfFeatch, isSuccess} = useQuery(\n        'get-pdf',\n        () => apiService.getDataByID('/PdfData', pdfId),\n        {\n            enabled: false,\n        },\n    );\n\n\n    // query-slot-get\n    const {data: slotData, refetch: slotFetch} = useQuery(\n        'get-slot',\n        () => apiService.getData('/Slot'),\n        {\n            enabled: false,\n        },\n    );\n    // query-house-get\n    const {data: houseData, refetch: houseFetch} = useQuery(\n        'get-house',\n        () => apiService.getData(`/House?slotId=${filterId?.slotId}`),\n        {\n            enabled: false,\n        },\n    );\n\n    // query-floor-get\n    const {data: floorData, refetch: floorFetch, remove: removeFloor} = useQuery(\n        'get-floor',\n        () => apiService.getData(`/Floor?housId=${filterId?.houseId}`),\n        {\n            enabled: false,\n        },\n    );\n\n    // get apartment\n    const {\n        data: apartmentData,\n        isLoading: getLoading,\n        refetch\n    } = useQuery('selling-apartment-get', () => apiService.getData(`/Apartment/?${filterStatus ? `status=${filterStatus}` : \"\"}${filterId?.slotId ? `&SlotId=${filterId?.slotId}` : \"\"}${filterId?.houseId ? `&HouseId=${filterId?.houseId}` : \"\"}${filterId?.floorId ? `&FlorId=${filterId?.floorId}` : \"\"}`), {\n        enabled:false,\n        onError: (error) => {\n\n            message.error(error);\n            // Handle the error\n        },\n    });\n\n\n    useEffect(() => {\n        if (isSuccess && pdfId) {\n            pdf(<CreatPDF data={pdfData}/>)\n                .toBlob()\n                .then(blob => {\n                    // Handle the generated PDF blob here (e.g., you can initiate a download)\n                    // For simplicity, let's log the blob URL\n                    setIsLoadingPdf(false)\n                    setPdfId(null)\n                    saveAs(blob, 'SUN-Human2Human.pdf')\n                });\n        }\n    }, [pdfData]);\n\n    useEffect(() => {\n        if (pdfId) {\n            pdfFeatch()\n        }\n    }, [pdfId]);\n\n    // slot fetch\n    useEffect(() => {\n        slotFetch()\n    }, []);\n    // refetch house\n    useEffect(() => {\n        if (filterId?.slotId) {\n            houseFetch()\n\n        }\n    }, [filterId?.slotId]);\n\n    // refetch floor\n    useEffect(() => {\n        if (filterId?.houseId) {\n            floorFetch()\n\n        }\n    }, [filterId?.houseId]);\n\n    useEffect(() => {\n        refetch()\n    }, [filterStatus, filterId]);\n\n    const onChangeFilterStatus = (data) => {\n        setFilterStatus(data)\n    }\n\n    // option status\n    const optionsStatusFilter = useMemo(() => {\n\n        return [\n            {\n                value: '',\n                label: 'Все',\n            },\n            {\n                value: 1,\n                label: 'Доступно',\n            },\n            {\n                value: 2,\n                label: 'Занято',\n            },\n            {\n                value: 3,\n                label: 'Продано',\n            },\n        ]\n    }, []);\n\n\n\n    // option slot\n    // const optionsSlot = useMemo(() => {\n    //     return slotData?.result?.map((option) => {\n    //         return {\n    //             value: option?.id,\n    //             label: option?.name,\n    //         };\n    //     });\n    // }, [slotData]);\n    //\n    //\n    // const onChangeSlot = (id) => {\n    //     form.setFieldsValue({houseId: null, floorId: null})\n    //     setFilterId({\n    //         slotId: id,\n    //         houseId: null,\n    //         floorId: null\n    //     })\n    // }\n\n    //  selected option static\n    useEffect(() => {\n        if (slotData) {\n            setFilterId({\n                slotId: slotData?.result[0]?.id,\n                houseId: null,\n                floorId: null\n            })\n        }\n    }, [slotData]);\n\n    // option house\n    const optionsHouse = useMemo(() => {\n\n        return houseData?.result?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.name,\n            };\n        });\n    }, [houseData]);\n    const onChangeHouse = (id) => {\n        form.setFieldsValue({floorId: null})\n        setFilterId(prevState => ({...prevState, houseId: id, floorId: null}))\n    }\n\n    //option floor\n    const optionsFloor = useMemo(() => {\n        return floorData?.result?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.name,\n            };\n        });\n    }, [floorData]);\n    const onChangeFloor = (id) => {\n        setFilterId(prevState => ({...prevState, floorId: id}))\n    }\n\n    // clear filter\n    const clearFiler = () => {\n        form.setFieldsValue({slotId: null, houseId: null, floorId: null, status: \"\"})\n        // setFilterId({\n        //     slotId: null,\n        //     houseId: null,\n        //     floorId: null\n        // })\n        setFilterId(prevState => ({...prevState, houseId: null, floorId: null}))\n        setFilterStatus(\"\")\n        // removeHouse()\n        removeFloor()\n    }\n\n    return (\n        <div className={'site-space-compact-wrapper'}>\n            <Space direction={'vertical'} style={{width: '100%'}}>\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        {/*<Col span={6}>*/}\n                        {/*    <Form.Item*/}\n                        {/*        label={'Выберите слот'}*/}\n                        {/*        name={'slotId'}*/}\n\n                        {/*        wrapperCol={{*/}\n                        {/*            span: 24,*/}\n                        {/*        }}*/}\n                        {/*    >*/}\n                        {/*        <Select*/}\n                        {/*            style={{*/}\n                        {/*                width: '100%',*/}\n                        {/*            }}*/}\n                        {/*            optionLabelProp='label'*/}\n                        {/*            onChange={onChangeSlot}*/}\n                        {/*            options={optionsSlot}*/}\n                        {/*        />*/}\n                        {/*    </Form.Item>*/}\n                        {/*</Col>*/}\n                        <Col span={6}>\n                            <Form.Item\n                                label={'Выберите дом'}\n                                name={'houseId'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                            >\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    optionLabelProp='label'\n                                    onChange={onChangeHouse}\n                                    options={optionsHouse}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item\n                                label={'Выберите этаж'}\n                                name={'floorId'}\n\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                            >\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    optionLabelProp='label'\n                                    options={optionsFloor}\n                                    onChange={onChangeFloor}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item\n                                label={'Фильтровать по статусу'}\n                                name={'status'}\n\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                            >\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    optionLabelProp='label'\n                                    onChange={onChangeFilterStatus}\n                                    options={optionsStatusFilter}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n\n                        <Form.Item\n                            label={' Очистка фильтра'}\n                            name={''}\n\n                            wrapperCol={{\n                                span: 24,\n                            }}\n                        >\n                            <Button\n                                htmlType=\"button\"\n                                type='dashed'\n                                icon={<PiBroomFill/>}\n                                style={{width: '100%',color:'red'}}\n                                onClick={clearFiler}>\n                                Очистка фильтра\n                            </Button>\n                        </Form.Item>\n                        </Col>\n\n                    </Row>\n\n                </Form>\n                {/*<Row gutter={20}>*/}\n                {/*    <Col offset={18} span={6}>*/}\n                {/*        <Button*/}\n                {/*            type='dashed'*/}\n                {/*            icon={<PiBroomFill/>}*/}\n                {/*            style={{width: '100%'}}*/}\n                {/*            onClick={clearFiler}>*/}\n                {/*            Очистка фильтра*/}\n                {/*        </Button>*/}\n                {/*    </Col>*/}\n                {/*</Row>*/}\n                <Spin\n                    size='medium'\n                    spinning={getLoading || isLoadingPdf}>\n                    <SellingTable\n                        data={apartmentData?.result}\n                        refetch={refetch}\n                        setPdfId={setPdfId}\n                        setIsLoadingPdf={setIsLoadingPdf}\n                    />\n                </Spin>\n            </Space>\n        </div>\n    );\n};\n\nexport default Index;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["initialValueForm","status","_ref","data","refetch","setPdfId","setIsLoadingPdf","user","useAuthUser","form","Form","useForm","isModalOpen","setIsModalOpen","useState","editId","setEditId","mutate","editStatusMutate","editStatus","isLoading","editStatusLoading","isSuccess","editStatusSuccess","useMutation","_ref2","url","id","apiService","editData","onSuccess","message","success","onError","error","obj","response","concat","onFinish","values","useEffect","setFieldsValue","optionsStatus","useMemo","value","label","role","push","columns","title","dataIndex","render","text","_jsx","children","_jsxs","record","Button","onClick","EditStatus","style","backgroundColor","color","icon","EditOutlined","image","Image","width","src","process","path","_","Space","size","disabled","CreatePDF","FaFilePdf","Modal","open","onOk","handleOk","validateFields","then","catch","errorInfo","console","log","onCancel","handleCancel","AppLoader","name","labelCol","span","wrapperCol","maxWidth","initialValues","autoComplete","Row","gutter","Col","Item","rules","required","Select","placeholder","optionLabelProp","options","Table","dataSource","rowKey","Index","filterStatus","setFilterStatus","filterId","setFilterId","slotId","houseId","floorId","pdfId","isLoadingPdf","pdfData","pdfFeatch","useQuery","getDataByID","enabled","slotData","slotFetch","getData","houseData","houseFetch","floorData","floorFetch","remove","removeFloor","apartmentData","getLoading","pdf","CreatPDF","toBlob","blob","saveAs","optionsStatusFilter","_slotData$result$","result","optionsHouse","_houseData$result","map","option","optionsFloor","_floorData$result","className","direction","onChange","prevState","htmlType","type","PiBroomFill","clearFiler","Spin","spinning","SellingTable","b","a","autoBom","warn","test","Blob","c","d","XMLHttpRequest","responseType","onload","g","onerror","send","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}